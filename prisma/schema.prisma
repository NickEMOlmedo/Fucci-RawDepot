generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Quality {
  good
  average
  poor
}

model Admin {
  id          Int          @id @default(autoincrement())
  firstName   String       @db.VarChar(30)
  lastName    String       @db.VarChar(30)
  dni         Int          @unique
  email       String       @db.VarChar(255)
  password    String       @db.VarChar(255)
  entries     Entry[]
  withdrawals Withdrawal[]
}

model Employee {
  id          Int          @id @default(autoincrement())
  firstName   String       @db.VarChar(30)
  lastName    String       @db.VarChar(30)
  dni         Int          @unique
  password    String       @db.VarChar(255)
  area        String       @db.VarChar(30)
  role        String       @db.VarChar(30)
  withdrawals Withdrawal[]
}

model Product {
  id                Int                @id @default(autoincrement())
  name              String             @db.VarChar(30)
  brand             String             @db.VarChar(30)
  manufacturer      String             @db.VarChar(30)
  presentation      String             @db.VarChar(30)
  quality           Quality
  stock             Int
  lots              Lot[]
  withdrawalDetails WithdrawalDetail[]
}

model Entry {
  id              Int      @id @default(autoincrement())
  productType     String   @db.VarChar(30)
  receiptCode     String   @db.VarChar(30)
  deliveryCompany String   @db.VarChar(30)
  entryDate       DateTime
  quantity        Int
  status          Quality
  admin           Admin    @relation(fields: [adminDni], references: [dni])
  adminDni        Int
}

model Lot {
  id             Int      @id @default(autoincrement())
  lotNumber      String   @db.VarChar(50)
  expirationDate DateTime
  quantity       Int
  product        Product  @relation(fields: [productId], references: [id])
  productId      Int
}

model Withdrawal {
  id                Int                @id @default(autoincrement())
  withdrawalDate    DateTime
  employee          Employee           @relation(fields: [employeeDni], references: [dni])
  employeeDni       Int
  withdrawalDetails WithdrawalDetail[]
  admin             Admin?             @relation(fields: [adminDni], references: [dni])
  adminDni          Int?
}

model WithdrawalDetail {
  id           Int        @id @default(autoincrement())
  quantity     Int
  status       Quality
  notes        String     @db.VarChar(100)
  withdrawal   Withdrawal @relation(fields: [withdrawalId], references: [id])
  withdrawalId Int
  product      Product    @relation(fields: [productId], references: [id])
  productId    Int
}
